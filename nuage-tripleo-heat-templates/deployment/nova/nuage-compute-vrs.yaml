heat_template_version: rocky

description: >
  Nuage Compute and ComputeSriov Host Prep Tasks
parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json

resources:
  NeutronComputePluginNuage:
    type: ./neutron-compute-plugin-nuage.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Nuage Compute VRS
    value:
      service_name:
        get_attr: [NeutronComputePluginNuage, role_data, service_name]
      config_settings:
        get_attr: [NeutronComputePluginNuage, role_data, config_settings]
      step_config:
        get_attr: [NeutronComputePluginNuage, role_data, step_config]
      deploy_steps_tasks:
        list_concat:
        - get_attr: [NeutronComputePluginNuage, role_data, deploy_steps_tasks]
        - - when: step|int == 1
            block:
              - name: Check if nuage vrs and metadata-agent are installed
                shell: rpm -q nuage-openvswitch nuage-metadata-agent
                failed_when: false
                register: nuage_check
              - name: Ensure VRS is operational in No patching scenarios
                when: nuage_check.rc != 0
                block:
                  - name: Installing Nuage VRS Packages
                    yum:
                      name: "{{ packages }}"
                      state: present
                    vars:
                      packages:
                        - nuage-openvswitch
                        - nuage-metadata-agent
                  - name: Start and enable vrs
                    service:
                      name: openvswitch
                      enabled: yes
                      state: started
              - name: Check if manager is present
                shell: >
                  /usr/bin/ovs-vsctl get-manager | grep "ptcp:6640:127.0.0.1"
                failed_when: false
                register: manager_check
              - name: Start a vsctl manager so nova can directly access the ovs database
                shell: >
                  /usr/bin/ovs-vsctl --timeout=5 --id=@manager -- create Manager
                  "target=\"ptcp:6640:127.0.0.1\"" -- add Open_vSwitch .
                  manager_options @manager
                when: manager_check.rc != 0
