heat_template_version: rocky

description: >
  Nuage Compute and ComputeSriov Host Prep Tasks
parameters:
  ServiceData:
    default: { }
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: { }
    description: Mapping of service_name -> network name. Typically set
      via parameter_defaults in the resource registry.  This
      mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: { }
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: { }
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: { }
    description: Mapping of service endpoint -> protocol. Typically set
      via parameter_defaults in the resource registry.
    type: json

resources:
  NeutronComputePluginNuage:
    type: ./neutron-compute-plugin-nuage.yaml
    properties:
      ServiceData: { get_param: ServiceData }
      ServiceNetMap: { get_param: ServiceNetMap }
      DefaultPasswords: { get_param: DefaultPasswords }
      EndpointMap: { get_param: EndpointMap }
      RoleName: { get_param: RoleName }
      RoleParameters: { get_param: RoleParameters }

  EnsureNoAVRSIptables:
    type: OS::Heat::Value
    properties:
      value:
        # The 6wind iptables, eptables, .. that are in the nuage repo for
        #   AVRS are seen as newer versions and thus yum update will
        #   install those, even on the controller where they do not belong
        #   a consequence of using 1 repo for all (not an issue in fresh
        #   deploy) since there is no yum update there
        #   To fix this, we will search which repo contains nuage bits
        #   and add the relevant packages to its excludes
        # This is done in step 1 of deploy_steps_tasks and thus post Red Hat subscription
        # And also in step 1 of update_task does not really matter that much, since we expect that the new repo is in
        #   place before the controller is updated
        - when: step|int == 1
          block:
            - name: Find the repo containing nuage bits
              vars:
                # For controller, we base our selves on the neutron client
                query_package: nuage-openstack-neutronclient
              shell: >
                repoquery -i {{ query_package }} 2>/dev/null
              register: repoquery_output
            - name: For all the repos containing nuage bits, exclude 6wind packages
              become: yes
              vars:
                exclude_packages:
                  - iptables
                  - iptables-libs
                  - iptables-services
                  - ebtables
                  - iptables-utils
              shell: >
                yum config-manager
                --setopt={{ repo.split(':')[1] | trim }}.exclude={{ exclude_packages | join(',') }}
                --save
              loop: "{{ repoquery_output.stdout_lines }}"
              when: '"Repository " in repo'
              loop_control:
                loop_var: repo


outputs:
  role_data:
    description: Role data for the Nuage Compute VRS
    value:
      service_name:
        get_attr: [ NeutronComputePluginNuage, role_data, service_name ]
      config_settings:
        get_attr: [ NeutronComputePluginNuage, role_data, config_settings ]
      step_config:
        get_attr: [ NeutronComputePluginNuage, role_data, step_config ]
      deploy_steps_tasks:
        list_concat:
          - get_attr: [ EnsureNoAVRSIptables, value ]
          - get_attr: [ NeutronComputePluginNuage, role_data, deploy_steps_tasks ]
          - - when: step|int == 1
              block:
                - name: Check if nuage vrs and metadata-agent are installed
                  shell: rpm -q nuage-openvswitch nuage-metadata-agent
                  failed_when: false
                  register: nuage_check
                - name: Ensure VRS is operational in No patching scenarios
                  when: nuage_check.rc != 0
                  block:
                    - name: Installing Nuage VRS Packages
                      yum:
                        name: "{{ packages }}"
                        state: present
                      vars:
                        packages:
                          - nuage-openvswitch
                          - nuage-metadata-agent
                    - name: Start and enable vrs
                      service:
                        name: openvswitch
                        enabled: yes
                        state: started
      update_tasks:
        list_concat:
          - get_attr: [ EnsureNoAVRSIptables, value ]
          - get_attr: [ NeutronComputePluginNuage, role_data, update_tasks ]
