heat_template_version: queens

description: >
  OpenStack Neutron Compute Nuage plugin

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  NovaPassword:
    description: The password for the nova service and db account
    type: string
    hidden: true
  NuageMetadataPort:
    description: TCP Port to listen for metadata server requests
    type: string
    default: '9697'
  NuageActiveController:
    description: IP address of the Active Virtualized Services Controller (VSC)
    type: string
  NuageStandbyController:
    description: IP address of the Standby Virtualized Services Controller (VSC)
    type: string
  NuageNovaMetadataPort:
    description: TCP Port used by Nova metadata server
    type: string
    default: '8775'
  NuageMetadataProxySharedSecret:
    description: Shared secret to sign the instance-id request
    type: string
  NuageNovaClientVersion:
    description: Client Version Nova
    type: string
    default: '2'
  NuageNovaOsUsername:
    description: Nova username in keystone_authtoken
    type: string
    default: 'nova'
  NuageMetadataAgentStartWithOvs:
    description: Set to true if nuage-metadata-agent needs to be started with nuage-openvswitch-switch
    type: boolean
    default: true
  NuageNovaApiEndpoint:
    description: One of publicURL, internalURL, adminURL in "keystone endpoint-list"
    type: string
    default: 'publicURL'
  NuageNovaRegionName:
    description: Region name in "keystone endpoint-list"
    type: string
    default: 'regionOne'
  NuageBridgeMTU:
    description: Support for non-default MTU configured on each Compute node
    type: string
    default: ''
  OvsHwOffload:
    default: false
    description: |
      Enable OVS Hardware Offload.
    type: boolean
  VrsExtraConfigs:
    description: Extra config params and values for nuage-openvswitch
    default: {}
    type: json
    tags:
      - role_specific

resources:

  RoleParametersValue:
    type: OS::Heat::Value
    properties:
      type: json
      value:
        map_replace:
          - map_replace:
            - nuage::vrs::enable_hw_offload: OvsHwOffload
              nuage::vrs::vrs_extra_configs: VrsExtraConfigs
            - values: {get_param: [RoleParameters]}
          - values:
              OvsHwOffload: {get_param: OvsHwOffload}
              VrsExtraConfigs: {get_param: VrsExtraConfigs}

outputs:
  role_data:
    description: Role data for the Neutron Compute Nuage plugin
    value:
      service_name: neutron_compute_plugin_nuage
      config_settings:
        map_merge:
          - get_attr: [RoleParametersValue, value]
          - nuage::vrs::active_controller: {get_param: NuageActiveController}
            nuage::vrs::standby_controller: {get_param: NuageStandbyController}
            nuage::vrs::bridge_mtu: {get_param: NuageBridgeMTU}
            nuage::metadataagent::metadata_port: {get_param: NuageMetadataPort}
            nuage::metadataagent::nova_metadata_port: {get_param: NuageNovaMetadataPort}
            nuage::metadataagent::metadata_secret: {get_param: NuageMetadataProxySharedSecret}
            nuage::metadataagent::nova_client_version: {get_param: NuageNovaClientVersion}
            nuage::metadataagent::nova_os_username: {get_param: NuageNovaOsUsername}
            nuage::metadataagent::metadata_agent_start_with_ovs: {get_param: NuageMetadataAgentStartWithOvs}
            nuage::metadataagent::nova_api_endpoint_type: {get_param: NuageNovaApiEndpoint}
            nuage::metadataagent::nova_region_name: {get_param: NuageNovaRegionName}
            tripleo::profile::base::neutron::agents::nuage::nova_os_tenant_name: 'service'
            tripleo::profile::base::neutron::agents::nuage::nova_os_password: {get_param: NovaPassword}
            tripleo::profile::base::neutron::agents::nuage::nova_auth_ip: {get_param: [EndpointMap, KeystoneInternal, host]}
            tripleo.neutron_compute_plugin_nuage.firewall_rules:
              '118 neutron vxlan networks':
                proto: 'udp'
                dport: 4789
              '100 metadata agent':
                dport: {get_param: NuageMetadataPort}
      step_config: |
        include ::tripleo::profile::base::neutron::agents::nuage
      update_tasks:
        - block:
          - name: check if python-openvswitch-nuage is installed
            command: rpm -q python-openvswitch-nuage
            register: python_ovs_nuage_check
            ignore_errors: True
          - name: check if python-openvswitch-nuage is present in the repo
            command: repoquery --all python-openvswitch-nuage
            register: python_openvswitch_nuage_output
          - name: Installing python-openvswitch-nuage
            yum:
              name: python-openvswitch-nuage
              state: present
            when: python_ovs_nuage_check.rc != 0 and python_openvswitch_nuage_output.stdout != ''
          - name: Check if nuage-bgp is installed
            shell: rpm -qa | grep -q nuage-bgp
            failed_when: false
            register: nuage_bgp_check
          - name: Check and update nuage-bgp package
            block:
            - name: check if nuage-bgp is updating
              shell: yum check-update nuage-bgp
              register: nuage_bgp_update_check
              failed_when: nuage_bgp_update_check.rc not in [0, 100]
              changed_when: nuage_bgp_update_check.rc == 100
            - name: Updating nuage-bgp package
              block:
                - name: Update nuage-bgp with noscripts flag
                  shell: yum --setopt=tsflags=noscripts install nuage-bgp -y
                - name: Reload daemon and restart nuage-bgp
                  systemd:
                    state: restarted
                    daemon_reload: yes
                    name: nuage-bgp
              when: nuage_bgp_update_check.rc == 100
            when: nuage_bgp_check.rc == 0
          when:  (step|int == 2)
