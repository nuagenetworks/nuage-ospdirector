diff -ruN openstack-tripleo-heat-templates-original/docker/services/ironic-conductor.yaml openstack-tripleo-heat-templates/docker/services/ironic-conductor.yaml
--- openstack-tripleo-heat-templates-original/docker/services/ironic-conductor.yaml     2019-01-31 14:39:48.255175754 -0500
+++ openstack-tripleo-heat-templates/docker/services/ironic-conductor.yaml      2019-01-31 14:44:25.647175754 -0500
@@ -84,6 +84,8 @@
             - - {get_attr: [IronicConductorBase, role_data, step_config]}
               - {get_attr: [MySQLClient, role_data, step_config]}
         config_image: {get_param: DockerIronicConfigImage}
+        volumes:
+          - /var/lib/ironic:/var/lib/ironic:z
       kolla_config:
         /var/lib/kolla/config_files/ironic_conductor.json:
           command: /usr/bin/ironic-conductor
diff -ruN openstack-tripleo-heat-templates-original/puppet/services/ironic-conductor.yaml openstack-tripleo-heat-templates/puppet/services/ironic-conductor.yaml
--- openstack-tripleo-heat-templates-original/puppet/services/ironic-conductor.yaml     2019-01-31 14:39:48.334175754 -0500
+++ openstack-tripleo-heat-templates/puppet/services/ironic-conductor.yaml      2019-01-31 14:42:16.246175754 -0500
@@ -161,6 +161,10 @@
   MonitoringSubscriptionIronicConductor:
     default: 'overcloud-ironic-conductor'
     type: string
+  IronicDhcpProvider:
+    description: Which DHCP provider to use
+    default: ''
+    type: string

 resources:
   IronicBase:
@@ -176,6 +180,7 @@
       IronicDebug: {get_param: IronicDebug}

 conditions:
+  dhcp_provider_unset: {equals : [{get_param: IronicDhcpProvider}, '']}
   service_debug:
     or:
       - equals: [{get_param: IronicDebug}, 'true']
@@ -192,6 +197,11 @@
       config_settings:
         map_merge:
           - get_attr: [IronicBase, role_data, config_settings]
+          -
+            if:
+            - dhcp_provider_unset
+            - {}
+            - ironic::conductor::dhcp_provider: {get_param: IronicDhcpProvider}
           - ironic::conductor::api_url: {get_param: [EndpointMap, IronicInternal, uri_no_suffix]}
             ironic::conductor::cleaning_disk_erase: {get_param: IronicCleaningDiskErase}
             ironic::conductor::cleaning_network: {get_param: IronicCleaningNetwork}
diff -ruN openstack-tripleo-heat-templates-original/docker/services/neutron-api.yaml openstack-tripleo-heat-templates/docker/services/neutron-api.yaml
--- openstack-tripleo-heat-templates-original/docker/services/neutron-api.yaml  2019-01-31 14:39:48.445175754 -0500
+++ openstack-tripleo-heat-templates/docker/services/neutron-api.yaml   2019-01-31 21:10:57.576175754 -0500
@@ -244,6 +244,11 @@
           when:
             - step|int == 6
             - is_bootstrap_node|bool
+        - name: Nuage package update
+          shell: yum -y update  nuage-*
+          when:
+            - step|int == 6
+            - is_bootstrap_node|bool
         - name: Neutron package update workaround
           yum: name=python-networking-odl state=latest
           when:
diff -ruN openstack-tripleo-heat-templates-original/puppet/services/neutron-compute-plugin-nuage.yaml openstack-tripleo-heat-templates/puppet/services/neutron-compute-plugin-nuage.yaml
--- openstack-tripleo-heat-templates-original/puppet/services/neutron-compute-plugin-nuage.yaml 2019-01-31 00:27:45.770000000 -0500
+++ openstack-tripleo-heat-templates/puppet/services/neutron-compute-plugin-nuage.yaml  2019-01-31 00:26:21.594000000 -0500
@@ -75,6 +75,25 @@
     description: Support for non-default MTU configured on each Compute node
     type: string
     default: ''
+  OvsHwOffload:
+    default: false
+    description: |
+      Enable OVS Hardware Offload. This feature supported from OVS 2.8.0
+    type: boolean
+
+resources:
+
+  RoleParametersValue:
+    type: OS::Heat::Value
+    properties:
+      type: json
+      value:
+        map_replace:
+          - map_replace:
+            - nuage::vrs::enable_hw_offload: OvsHwOffload
+            - values: {get_param: [RoleParameters]}
+          - values:
+              OvsHwOffload: {get_param: OvsHwOffload}

 outputs:
   role_data:
@@ -82,25 +101,27 @@
     value:
       service_name: neutron_compute_plugin_nuage
       config_settings:
-        nuage::vrs::active_controller: {get_param: NuageActiveController}
-        nuage::vrs::standby_controller: {get_param: NuageStandbyController}
-        nuage::vrs::bridge_mtu: {get_param: NuageBridgeMTU}
-        nuage::metadataagent::metadata_port: {get_param: NuageMetadataPort}
-        nuage::metadataagent::nova_metadata_port: {get_param: NuageNovaMetadataPort}
-        nuage::metadataagent::metadata_secret: {get_param: NuageMetadataProxySharedSecret}
-        nuage::metadataagent::nova_client_version: {get_param: NuageNovaClientVersion}
-        nuage::metadataagent::nova_os_username: {get_param: NuageNovaOsUsername}
-        nuage::metadataagent::metadata_agent_start_with_ovs: {get_param: NuageMetadataAgentStartWithOvs}
-        nuage::metadataagent::nova_api_endpoint_type: {get_param: NuageNovaApiEndpoint}
-        nuage::metadataagent::nova_region_name: {get_param: NuageNovaRegionName}
-        tripleo::profile::base::neutron::agents::nuage::nova_os_tenant_name: 'service'
-        tripleo::profile::base::neutron::agents::nuage::nova_os_password: {get_param: NovaPassword}
-        tripleo::profile::base::neutron::agents::nuage::nova_auth_ip: {get_param: [EndpointMap, KeystoneInternal, host]}
-        tripleo.neutron_compute_plugin_nuage.firewall_rules:
-          '118 neutron vxlan networks':
-            proto: 'udp'
-            dport: 4789
-          '100 metadata agent':
-            dport: {get_param: NuageMetadataPort}
+        map_merge:
+          - get_attr: [RoleParametersValue, value]
+          - nuage::vrs::active_controller: {get_param: NuageActiveController}
+            nuage::vrs::standby_controller: {get_param: NuageStandbyController}
+            nuage::vrs::bridge_mtu: {get_param: NuageBridgeMTU}
+            nuage::metadataagent::metadata_port: {get_param: NuageMetadataPort}
+            nuage::metadataagent::nova_metadata_port: {get_param: NuageNovaMetadataPort}
+            nuage::metadataagent::metadata_secret: {get_param: NuageMetadataProxySharedSecret}
+            nuage::metadataagent::nova_client_version: {get_param: NuageNovaClientVersion}
+            nuage::metadataagent::nova_os_username: {get_param: NuageNovaOsUsername}
+            nuage::metadataagent::metadata_agent_start_with_ovs: {get_param: NuageMetadataAgentStartWithOvs}
+            nuage::metadataagent::nova_api_endpoint_type: {get_param: NuageNovaApiEndpoint}
+            nuage::metadataagent::nova_region_name: {get_param: NuageNovaRegionName}
+            tripleo::profile::base::neutron::agents::nuage::nova_os_tenant_name: 'service'
+            tripleo::profile::base::neutron::agents::nuage::nova_os_password: {get_param: NovaPassword}
+            tripleo::profile::base::neutron::agents::nuage::nova_auth_ip: {get_param: [EndpointMap, KeystoneInternal, host]}
+            tripleo.neutron_compute_plugin_nuage.firewall_rules:
+              '118 neutron vxlan networks':
+                proto: 'udp'
+                dport: 4789
+              '100 metadata agent':
+                dport: {get_param: NuageMetadataPort}
       step_config: |
         include ::tripleo::profile::base::neutron::agents::nuage